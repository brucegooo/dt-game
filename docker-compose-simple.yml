services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: dt-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dt_game
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dt-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: dt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dt-network

  # RocketMQ NameServer
  rocketmq-namesrv:
    image: apache/rocketmq:5.3.0
    container_name: dt-rocketmq-namesrv
    ports:
      - "9876:9876"
    environment:
      - JAVA_OPT_EXT=-Xms512m -Xmx512m
    command: sh mqnamesrv
    volumes:
      - rocketmq_namesrv_logs:/home/rocketmq/logs
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/9876' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - dt-network

  # RocketMQ Broker
  rocketmq-broker:
    image: apache/rocketmq:5.3.0
    container_name: dt-rocketmq-broker
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    environment:
      - NAMESRV_ADDR=rocketmq-namesrv:9876
      - JAVA_OPT_EXT=-Xms512m -Xmx512m
    command: sh mqbroker -c /home/rocketmq/broker.conf
    volumes:
      - rocketmq_broker_logs:/home/rocketmq/logs
      - rocketmq_broker_store:/home/rocketmq/store
      - ./docker/broker.conf:/home/rocketmq/broker.conf
    depends_on:
      rocketmq-namesrv:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/10911' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - dt-network

  # Dragon vs Tiger 应用服务（使用本地编译的二进制文件）
  dt-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dt-server
    environment:
      # 使用环境变量配置，不依赖 etcd
      - DB_DSN=root:root@tcp(mysql:3306)/dt_game?charset=utf8mb4&parseTime=True&loc=Local
      - REDIS_ADDR=redis:6379
      - ROCKETMQ_NAMESRV=rocketmq-namesrv:9876
      - TZ=Asia/Shanghai
    ports:
      - "8087:8087"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rocketmq-broker:
        condition: service_healthy
    networks:
      - dt-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  rocketmq_namesrv_logs:
  rocketmq_broker_logs:
  rocketmq_broker_store:

networks:
  dt-network:
    driver: bridge

